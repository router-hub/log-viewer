name: Build and Release

on:
  push:
    tags:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build React app
      run: npm run build

    - name: Build Electron app for Windows
      run: npm run dist:win
      if: matrix.os == 'windows-latest'

    - name: Build Electron app for macOS
      run: npm run dist:mac
      if: matrix.os == 'macos-latest'

    - name: Build Electron app for Linux
      run: npm run dist:linux
      if: matrix.os == 'ubuntu-latest'

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      if: matrix.os == 'windows-latest'
      with:
        name: windows-build
        path: dist-electron/

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      if: matrix.os == 'macos-latest'
      with:
        name: macos-build
        path: dist-electron/

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        name: linux-build
        path: dist-electron/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/windows-build/**/*
          artifacts/macos-build/**/*
          artifacts/linux-build/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}